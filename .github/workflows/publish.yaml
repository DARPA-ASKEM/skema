---
# Automatically build Docker images on changes to main and push them to a
# Container Registry using HCL Bake file.

name: Build and Publish
on:
  push:
    branches: ['main']
    tags: ['*']

env:
  REGISTRY: ghcr.io
  OWNER: ${{ github.repository_owner }}
  BAKE_FILE: docker-bake.hcl

jobs:
  tag-generator:
    name: Determine image tag
    runs-on: ubuntu-22.04
    outputs:
      image-tag: ${{ steps.generate.outputs.tag }}
    steps:
      - name: Generate appropriate tag
        id: generate
        run: |
          if [[ '${{ github.ref_type }}' == 'branch' && '${{ github.ref_name }}' == 'main' ]]; then
            TAG=latest
          else
            SEMVER=$( echo ${{ github.ref_name }} | sed -nre 's/^v[^0-9]*(([0-9]+\.)*[0-9]+(-[a-z]+)?).*/\1/p')
            if [[ -n $SEMVER ]]; then
              TAG=${SEMVER}
            else
              TAG=${{ github.ref_name }}
            fi
          fi

          echo "$TAG"
          echo "tag=${TAG,,}" >> ${GITHUB_OUTPUT}

      - name: Show Generated Tag
        run: echo ${{ steps.generate.outputs.tag }}

  make-dockerfile:
    name: Create skema-text-reading Dockerfile
    runs-on: ubuntu-22.04
    needs:
      - tag-generator
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.workflow_run.head_branch }}

      - name: Setup JDK (w/ SBT)
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 11

      - name: Generate Dockerfile (Text Reading)
        working-directory: ./skema/text_reading/scala
        env:
          # Use this to set your desired tag;
          # Alternatively, set this env variable when building the image
          APP_VERSION: steps.generate.outputs.tag
        run: |
          sbt "webapp/docker:stage"
          mkdir -p docker-tmp
          cp webapp/target/docker/stage/Dockerfile docker-tmp
          echo "Generated Dockerfile copied successfully to docker-tmp/."

      # After generating the Dockerfile, save it as an artifact
      - name: Save Dockerfile as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: dockerfile
          path: docker-tmp/Dockerfile

  bake:
    needs:
      - tag-generator
      - make-dockerfile
    steps:
      - uses: actions/checkout@v3

      - name: Download Dockerfile Artifact
        uses: actions/download-artifact@v3
        with:
          name: dockerfile
          path: docker-tmp/Dockerfile

      - run: |
          echo "SKEMA_TEXT_READING_DOCKERFILE_PATH=docker-tmp" >> ${GITHUB_ENV}
          echo "Dockerfile path saved in SKEMA_TEXT_READING_DOCKERFILE_PATH env variable."


      - name: Run bake
        uses: darpa-askem/.github/.github/workflows/bake-publish.yaml@main
        with:
          file: 'docker-bake.hcl'
          group: 'prod'
          registry: 'ghcr.io'
          organization: ${{ github.repository_owner }}
          tag: ${{ needs.tag-generator.outputs.image-tag }}
        secrets:
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
